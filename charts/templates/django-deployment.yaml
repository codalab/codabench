{{- with .Values.django }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
        - name: django
          image: "{{ .image.repository }}:{{ .image.tag }}"
          command: ["bash", "-c", "cd /app/src && watchmedo auto-restart -p '*.py' --recursive -- gunicorn asgi:application -w 2 -k uvicorn.workers.UvicornWorker -b :8000 -b :80 --capture-output --log-level debug"]
          env:
            - name: DATABASE_URL
              value: "postgres://{{ $.Values.env.DB_USERNAME }}:{{ $.Values.env.DB_PASSWORD }}@{{ $.Values.env.DB_HOST }}:{{ $.Values.env.DB_PORT }}/{{ $.Values.env.DB_NAME }}"
            # - name: SECRET_KEY
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: SECRET_KEY
            # - name: DB_HOST
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: DB_HOST
            # - name: DB_NAME
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: DB_NAME
            # - name: DB_USERNAME
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: DB_USERNAME
            # - name: DB_PORT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: DB_PORT
            - name: DJANGO_SETTINGS_MODULE
              valueFrom:
                configMapKeyRef:
                  name: my-config
                  key: DJANGO_SETTINGS_MODULE
            # - name: ALLOWED_HOSTS
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: ALLOWED_HOSTS
            # - name: SUBMISSIONS_API_URL
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: SUBMISSIONS_API_URL
            # - name: MAX_EXECUTION_TIME_LIMIT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: MAX_EXECUTION_TIME_LIMIT
            # - name: DOMAIN_NAME
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: DOMAIN_NAME
            # - name: RABBITMQ_HOST
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: RABBITMQ_HOST
            # - name: RABBITMQ_DEFAULT_USER
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: RABBITMQ_DEFAULT_USER
            # - name: RABBITMQ_MANAGEMENT_PORT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: RABBITMQ_MANAGEMENT_PORT
            # - name: RABBITMQ_PORT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: RABBITMQ_PORT
            # - name: WORKER_CONNECTION_TIMEOUT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: WORKER_CONNECTION_TIMEOUT
            # - name: FLOWER_PUBLIC_PORT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: FLOWER_PUBLIC_PORT
            # - name: SELENIUM_HOSTNAME
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: SELENIUM_HOSTNAME
            # - name: MINIO_ACCESS_KEY
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: MINIO_ACCESS_KEY
            # - name: MINIO_SECRET_KEY
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: MINIO_SECRET_KEY
            # - name: MINIO_PORT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: MINIO_PORT
            # - name: AWS_ACCESS_KEY_ID
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: AWS_ACCESS_KEY_ID
            # - name: AWS_SECRET_ACCESS_KEY
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: AWS_SECRET_ACCESS_KEY
            # - name: AWS_STORAGE_BUCKET_NAME
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: AWS_STORAGE_BUCKET_NAME
            # - name: AWS_STORAGE_PRIVATE_BUCKET_NAME
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: AWS_STORAGE_PRIVATE_BUCKET_NAME
            # - name: AWS_S3_ENDPOINT_URL
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: AWS_S3_ENDPOINT_URL
            # - name: AWS_QUERYSTRING_AUTH
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: AWS_QUERYSTRING_AUTH
            # - name: RERUN_SUBMISSION_LIMIT
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: RERUN_SUBMISSION_LIMIT
            # - name: ENABLE_SIGN_UP
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: ENABLE_SIGN_UP
            # - name: ENABLE_SIGN_IN
            #   valueFrom:
            #     configMapKeyRef:
            #       name: my-config
            #       key: ENABLE_SIGN_IN
            # - name: DB_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: my-secret
            #       key: DB_PASSWORD
            # - name: RABBITMQ_DEFAULT_PASS
            #   valueFrom:
            #     secretKeyRef:
            #       name: my-secret
            #       key: RABBITMQ_DEFAULT_PASS
            # - name: FLOWER_BASIC_AUTH
            #   valueFrom:
            #     secretKeyRef:
            #       name: my-secret
            #       key: FLOWER_BASIC_AUTH
          volumeMounts:
            - name: django-app
              mountPath: /app
            - name: codalab_tmp
              mountPath: /codalab_tmp
            - name: backups
              mountPath: /app/backups
            - name: logs
              mountPath: /app/logs
          ports:
            - containerPort: 8000
            - containerPort: 80
        - name: site_worker
          image: "{{ .image.repository }}:{{ .image.tag }}"
          command: ["bash", "-c", "watchmedo auto-restart -p '*.py' --recursive -- celery -A celery_config worker -B -Q site-worker -l info -n site-worker@%n --concurrency=2"]
          workingDir: /app/src
          volumeMounts:
            - name: django-app
              mountPath: /app
      volumes:
        - name: django-app
          emptyDir: {}
        - name: codalab_tmp
          emptyDir: {}
        - name: backups
          emptyDir: {}
        - name: logs
          emptyDir: {}
{{- end }}
