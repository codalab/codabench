version: '3'
services:
  #-----------------------------------------------
  #   Web Service
  #-----------------------------------------------
  django:
    build: .
    container_name: django
    env_file: .env
    command: bash -c "cd /app/src && /usr/local/bin/gunicorn wsgi:application -w 2 -k gevent -b :8000 -b :80 --reload"
    environment:
      - DJANGO_SETTINGS_MODULE=settings.base
    env_file: .env
    volumes:
      - .:/app
    ports:
      - 8000:8000
      - 80:80
    depends_on:
      - db
      - celery
  #-----------------------------------------------
  #   Database Service
  #-----------------------------------------------
  db:
    image: postgres
    container_name: db
    env_file: .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./var/postgres:/var/lib/postgresql/data
  #-----------------------------------------------
  #   Rabbitmq Service
  #-----------------------------------------------
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbit
    env_file: .env
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./var/rabbitmq:/var/lib/rabbitmq/
  #-----------------------------------------------
  #   Celery Service
  #-----------------------------------------------
  celery:
    container_name: celery
    command: bash -c "cd /app/src && celery -A comp_worker worker --loglevel=debug"
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile.celery
    depends_on:
      - rabbitmq
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=settings.base
    env_file: .env
    volumes:
      - .:/app
  #-----------------------------------------------
  #   Flower Service
  #-----------------------------------------------
  flower:
    container_name: flower
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile.flower
    ports:
      - 15555:5555
    depends_on:
      - celery
      - rabbitmq